// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String?
  items         Item[]
  projects      Project[]
  contexts      Context[]
  tags          Tag[]
  reviews       Review[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Item {
  id          String    @id @default(cuid())
  title       String
  notes       String?
  status      String
  priority    Int       @default(0)
  dueDate     DateTime?
  contexts    Context[]
  project     Project?  @relation(fields: [projectId], references: [id])
  projectId   String?
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  tags        Tag[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Project {
  id          String    @id @default(cuid())
  title       String
  status      String
  items       Item[]
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  parentId    String?
  parent      Project?  @relation("ProjectHierarchy", fields: [parentId], references: [id])
  children    Project[] @relation("ProjectHierarchy")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Context {
  id          String    @id @default(cuid())
  name        String
  items       Item[]
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Tag {
  id        String   @id @default(cuid())
  name      String
  color     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  items     Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  completedAt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

